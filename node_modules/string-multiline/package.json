{
  "_from": "string-multiline",
  "_id": "string-multiline@0.1.1",
  "_inBundle": false,
  "_integrity": "sha1-zj0XuW4xY0aEgH2LNYU+FntvjzE=",
  "_location": "/string-multiline",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "string-multiline",
    "fetchSpec": "latest",
    "name": "string-multiline",
    "raw": "string-multiline",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/string-multiline/-/string-multiline-0.1.1.tgz",
  "_shasum": "ce3d17b96e31634684807d8b35853e167b6f8f31",
  "_spec": "string-multiline",
  "_where": "C:\\Users\\serji\\GIT",
  "author": {
    "email": "hello@danielarandaochoa.com",
    "name": "Daniel Aranda",
    "url": "http://danielarandaochoa.com"
  },
  "bugs": {
    "url": "https://github.com/daniel-aranda/nodejs-string-multiline/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "fs": "0.0.2"
  },
  "deprecated": false,
  "description": "Real support for String Multiline vars on NodeJS by reading the vars from a external file",
  "devDependencies": {
    "istanbul": "^0.3.17",
    "jasmine-core": "^2.3.4",
    "jasmine-node": "^1.14.5"
  },
  "homepage": "https://github.com/daniel-aranda/nodejs-string-multiline#readme",
  "keywords": [
    "multiline",
    "string",
    "string-multiline"
  ],
  "license": "MIT",
  "main": "string-multiline.js",
  "name": "string-multiline",
  "optionalDependencies": {},
  "readme": "# NodeJS String Multiline\nNodeJS smooth support to multiline vars. Consider that multiline string vars\nare commonly SQL queries, test strings, etc, this library load them from a\ndata file, where you could put it. Also you don't mess your beauty\nJavaScript code with giant strings that aren't code.\n\n\n##Introduction\nHave you every dream to have a multiline\nstring support like Ruby and others, like this:\n```\n<<<my_var\nThis a very large string\n>>>\n<<<my_sql\nSELECT\n    *\nFROM my_table\nWHERE\n    field = 'true';\n```\n\nAnd use it as:\n```js\nconsole.log(data.my_var);\nconsole.log(data.my_sql);\n```\n\nThis library makes it possible.\n\n##Installation\n```\nnpm install string-multiline\n```\n\n\n###Real World example:\n```\nmkdir data\ncd data\ntouch somedata.dat //below content of somedata.dat\ncd ..\ntouch app.js //below content of app.js\nnode app.js\n```\n\nYou should see something like this as output:\n```js\n{\n    my_var: '...',\n    my_sql: '...'\n}\n```\n\n####Content of somedata.dat:\n```\n<<<my_var\nThis is a large string\nwith multiline support\nyeah!\n>>>\n\n<<<my_sql\nSELECT\n    *\nFROM my_table\n>>>\n```\n\n###Content of app.js\n```js\nvar stringMultiline = require('string-multiline');\n\nstringMultiline.parseMultilineVars('./data/somedata.dat', function(result){\n    console.log(result);\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/daniel-aranda/nodejs-string-multiline.git"
  },
  "scripts": {
    "test": "istanbul cover node_modules/jasmine-node/lib/jasmine-node/cli.js tests"
  },
  "version": "0.1.1"
}
